.Fortran("bigtdsub",as.integer(3),as.integer(2),as.integer(2),
as.integer(2),as.single(as.vector(a3)),as.single(rep(0,24)),
as.single(rep(0,18)),as.single(rep(0,36)))
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",as.integer(3),as.integer(2),as.integer(2),
as.integer(2),as.single(as.vector(a3)),as.single(rep(0,24)),
as.single(rep(0,18)),as.single(rep(0,36)))
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",as.integer(3),as.integer(2),as.integer(2),
as.integer(2),as.single(as.vector(a3)),as.single(rep(0,24)),
as.single(rep(0,18)),as.single(rep(0,36)))
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",as.integer(3),as.integer(2),as.integer(2),
as.integer(2),as.single(as.vector(a3)),as.single(rep(0,24)),
as.single(rep(0,18)),as.single(rep(0,36)))
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),
p=as.integer(2),x=as.single(a3),z=as.single(rep(0,24)),
b=as.single(rep(0,18)),s=as.single(rep(0,36)))
a3
as.vector(a3)
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),
p=as.integer(2),x=as.single(a3),z=as.single(rep(0,24)),
b=as.single(rep(0,18)),s=as.single(rep(0,36)))
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),
p=as.integer(2),x=as.single(a3),z=as.single(rep(0,24)),
b=as.single(rep(0,18)),s=as.single(rep(0,36)))
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),
p=as.integer(2),x=as.single(a3),z=as.single(rep(0,24)),
b=as.single(rep(0,18)),s=as.single(rep(0,36)))
xg <-.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),
p=as.integer(2),x=as.single(a3),z=as.single(rep(0,24)),
b=as.single(rep(0,18)),s=as.single(rep(0,36)))
str(xg)
a6 <- array(xg$b,c(3,3,2))
a6
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),
p=as.integer(2),x=as.single(a3/12),z=as.single(rep(0,24)),
b=as.single(rep(0,18)),s=as.single(rep(0,18)))
xg <-.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),
p=as.integer(2),x=as.single(a3/12),z=as.single(rep(0,24)),
b=as.single(rep(0,18)),s=as.single(rep(0,18)))
str(xg)
a7 <- array(xg$s,c(3,3,2))
a7
xg$x
xg$b
q()
dyn.load("bigtdsub.dll")
xg <-.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),
p=as.integer(2),x=as.single(a3/12),z=as.single(rep(0,24)),
b=as.single(rep(0,18)),s=as.single(rep(0,18)))
xg
a7 <- array(xg$s,c(3,3,2))
a7
q()
dyn.load("bigtdsub.dll")
xg <-.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),
p=as.integer(2),x=as.single(a3/12),z=as.single(rep(0,24)),
b=as.single(rep(0,18)),s=as.single(rep(0,18)))
xg$s
q()
dyn.load("bigtdsub.dll")
xg <-.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),
p=as.integer(2),x=as.single(a3/12),z=as.single(rep(0,24)),
b=as.single(rep(0,18)),s=as.single(rep(0,18)))
xg$s
q()
dyn.load("bigtdsub.dll")
xg <-.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),
p=as.integer(2),x=as.single(a3/12),z=as.single(rep(0,24)),
b=as.single(rep(0,18)),s=as.single(rep(0,18)))
q()
dyn.load("bigtdsub.dll")
xg <-.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),
p=as.integer(2),x=as.single(a3/12),z=as.single(rep(0,24)),
b=as.single(rep(0,18)),s=as.single(rep(0,18)))
q()
dyn.load("bigtdsub.dll")
xg <-.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),
p=as.integer(2),x=as.single(a3/12),z=as.single(rep(0,24)),
b=as.single(rep(0,18)),s=as.single(rep(0,18)))
xg$s
q()
dyn.load("bigtdsub.dll")
xg <-.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),
p=as.integer(2),x=as.single(a3/12),z=as.single(rep(0,24)),
b=as.single(rep(0,18)),s=as.single(rep(0,18)))
q()
a1 <- array(rnorm(12,mean=10,sd=1),c(3,2,2))
dyn.load("bigtdsub.dll")
xg <-.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),
p=as.integer(2),x=as.single(a1),z=as.single(rep(0,24)),
b=as.single(rep(0,18)),s=as.single(rep(0,18)))
xg$s
array(xg$s,c(3,3,2))
a1
a1[,,1] %*% t(a1[,,1])
a1[,,2] %*% t(a1[,,2])
array(xg$b,c(3,3,2))
q()
a2 <- array(rnorm(60,mean=10,sd=1),c(5,4,3))
xg <-.Fortran("bigtdsub",n=as.integer(5),m=as.integer(4),o=as.integer(3),
p=as.integer(3),x=as.single(a2),z=as.single(rep(0,180)),
b=as.single(rep(0,75)),s=as.single(rep(0,75)))
dyn.load("bigdtsub.dll")
dyn.load("bigtdsub.dll")
xg <-.Fortran("bigtdsub",n=as.integer(5),m=as.integer(4),o=as.integer(3),
p=as.integer(3),x=as.single(a2),z=as.single(rep(0,180)),
b=as.single(rep(0,75)),s=as.single(rep(0,75)))
xg$s
array(xg$,c(5,5,3))
array(xg$s,c(5,5,3))
q()
str(BC_Loc)
dim(BC_count)
library(SpaceX)
dim(BC_count)
str(BC_Loc)
ls(pattern="BC")
str(BC_fit)
str(BC_count)
names(BC_count)
str(BC_fit)
str(BC_small)
lilsp1
lilspq(200,5,BC_small$Posterior_samples)
lilsp1(200,5,BC_small$Posterior_samples)
BC_fit_lil <- lilsp1(200,5,BC_small$Posterior_samples)
str(BC_fit_lil)
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",n=as.integer(3),m=as.integer(2),o=as.integer(2),p=as.integer(2),
x=as.single(a1),z=as.single(rep(0,24)),b=as.single(rep(0,18)),s=as.single(rep(0,18)))
q()
a1
q()
q()
a1
q()
a1
a2
a1
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",as.integer(3),as.integer(2),as.integer(2),
as.double(a1),as.double(rep(0,18)))
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",as.integer(3),as.integer(2),as.integer(2),
as.double(a1),as.double(rep(0,18)))
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",as.integer(3),as.integer(2),as.integer(2),
as.double(a1),as.double(rep(0,18)))
.Fortran("bigtdsub",as.integer(3),as.integer(2),as.integer(2),
as.single(a1),as.single(rep(0,18)))
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",as.integer(3),as.integer(2),as.integer(2),
as.double(a1),as.double(rep(0,18)),as.double(rep(0,18)))
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",as.integer(3),as.integer(2),as.integer(2),
as.double(a1),as.double(rep(0,18)),as.double(rep(0,18)))
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",as.integer(3),as.integer(2),as.integer(2),
as.single(a1),as.single(rep(0,18)),as.single(rep(0,18)))
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",as.integer(3),as.integer(2),as.integer(2),
as.single(a1),as.single(rep(0,18)),as.single(rep(0,18)))
q()
dyn.load("bigtdsub.dll")
.Fortran("bigtdsub",as.integer(3),as.integer(2),as.integer(2),
as.single(a1),a2222as.single(rep(0,18)),as.single(rep(0,18)))
a8 <- array(rnorm(24,mean=20,sd=2),c(3,2,2,2))
.Fortran("bigtdsub",as.integer(3),as.integer(2),as.integer(2),
as.single(a1),as.single(a8),as.single(rep(0,18)),as.single(rep(0,36)))
x8 <- .Fortran("bigtdsub",as.integer(3),as.integer(2),as.integer(2),
as.single(a1),as.single(a8),as.single(rep(0,18)),as.single(rep(0,36)))
x8$s
str(x8)
x8[,7]
unlist(x8[,7])
unlist(x8[[7]])
array(unlist(x8[[7]]),c(3,3,2,2))
q()
lilsp2a
source("lilsp2a.R")
x9 <- lilsp2a(BC_small$Posterior_samples)
source("lilsp2a.R")
x9 <- lilsp2a(BC_small$Posterior_samples)
str(x9)
source("lilsp2a.R")
x9 <- lilsp2a(BC_small$Posterior_samples)
source("lilsp2a.R")
x9 <- lilsp2a(BC_small$Posterior_samples)
source("lilsp2a.R")
x9 <- lilsp2a(BC_small$Posterior_samples)
q()
str(x9)
str(BC_fit)
source("lilsp2a.R")
x9 <- lilsp2a(BC_small$Posterior_samples)
q()
x9 <- lilsp2a(BC_small$Posterior_samples)
q()
str(BC_small)
unlist(BC_small$Posterior_samples$Lambda)
lenght(unlist(BC_small$Posterior_samples$Lambda))
length(unlist(BC_small$Posterior_samples$Lambda))
str(BC_small)
q()
dyn.load("bigtdsub.dll")
x8 <- .Fortran("bigtdsub",n=as.integer(200),
m=as.integer(5),o=as.integer(100),
x=as.single(BC_small$Posterior_samples$Phi),
z=as.single(unlist(BC_small$Posterior_samples$Lambda)),
b=as.single(rep(0,200*200*100)),s=as.single(rep(0,200*200*100*3)))
str(x8)
str(x9)
corr1 <- array(x8$b,c(200,200,100))
x10 <- apply(corr1,c(1,2),mean)
str(x10)
x11 <- apply(array(x8$s,c(200,200,100,3)),c(1,2,4),mean)
str(x11)
q()
a1
dyn.load("mean1sub.dll")
.Fortran("mean1sub",n=as.integer(3),m=as.integer(2),
a=as.single(a1),b=as.single(rep(0,9)),d=as.single(rep(0,9)))
apply(a1,c(1,2),mean)
a8
q()
a1
apply(a1,c(1,2),mean)
dyn.load("mean1sub.dll")
.Fortran("mean1sub",n=as.integer(3),m=as.integer(2),
f=as.single(a1),d=as.single(rep(0,9)))
q()
dyn.load("mean1sub.dll")
.Fortran("mean1sub",n=as.integer(3),m=as.integer(2),
f=as.single(a1),d=as.single(rep(0,9)))
a1
q()
dyn.load("mean1sub.dll")
.Fortran("mean1sub",n=as.integer(3),m=as.integer(2),
o=as.integer(2),f=as.single(a1),d=as.single(rep(0,9)))
a1
.Fortran("mean1sub",n=as.integer(3),m=as.integer(2),
o=as.integer(2),f=as.single(a1),d=as.single(rep(0,6)))
apply(a1,c(1,2),mean)
q()
a8
dyn.load("mean2sub.dll")
.Fortran("mean2sub",as.integer(3),as.integer(2),as.integer(2),
as.integer(2),
as.single(a8),as.single(rep(0,12)))
q()
dyn.load("mean2sub.dll")
a10 <- .Fortran("mean2sub",as.integer(3),as.integer(2),as.integer(2),
as.integer(2),
as.single(a8),as.single(rep(0,12)))
str(a10)
array(a10[[6]],c(3,2,2))
apply(a8,c(1,2,4),mean)
q()
dyn.load("mean2sub.dll")
a10 <- .Fortran("mean2sub",as.integer(3),as.integer(2),as.integer(2),
as.integer(2),
as.single(a8),as.single(rep(0,12)))
a10[[6]]
q()
dyn.load("mean2sub.dll")
a10 <- .Fortran("mean2sub",as.integer(3),as.integer(2),as.integer(2),
as.integer(2),
as.single(a8),as.single(rep(0,12)))
a10[[6]]
a8
dim(a8)
apply(a8,c(1,2,4),mean)
apply(a8,c(1,2),mean)
apply(a8,c(1,2,3),mean)
apply(a8,c(1,2,4),mean)
dyn.unload("mean2sub.dll")
a10 <- .Fortran("mean2sub",as.integer(3),as.integer(2),as.integer(2),
as.integer(2),
as.single(a8),as.single(rep(0,12)))
dyn.load("mean2sub.dll")
a10 <- .Fortran("mean2sub",as.integer(3),as.integer(2),as.integer(2),
as.integer(2),
as.single(a8),as.single(rep(0,12)))
a10[[6]]
array(a10[[6]],c(3,2,2))
apply(a8,c(1,2,4),mean)
q()
dyn.load("bigtdsub.dll")
x8 <- .Fortran("bigtdsub",n=as.integer(200),
m=as.integer(5),o=as.integer(100),
x=as.single(BC_small$Posterior_samples$Phi),
z=as.single(unlist(BC_small$Posterior_samples$Lambda)),
b=as.single(rep(0,200*200)),s=as.single(rep(0,200*200*3)))
str(x8)
str(x9)
q()
dyn.load("bigtdsub.dll")
x8 <- .Fortran("bigtdsub",n=as.integer(200),
m=as.integer(5),o=as.integer(100),
x=as.single(BC_small$Posterior_samples$Phi),
z=as.single(unlist(BC_small$Posterior_samples$Lambda)),
b=as.single(rep(0,200*200)),s=as.single(rep(0,200*200*3)))
x8 <- .Fortran("bigtdsub",n=as.integer(200),
m=as.integer(5),o=as.integer(100),
x=as.single(BC_small$Posterior_samples$Phi),
z=as.single(unlist(BC_small$Posterior_samples$Lambda)),
b=as.single(rep(0,200*200)),s=as.single(rep(0,200*200*3)))
str(x8)
str(x9)
q()
dyn.load("bigtdsub.dll")
x8 <- .Fortran("bigtdsub",n=as.integer(200),
m=as.integer(5),o=as.integer(100),
x=as.single(BC_small$Posterior_samples$Phi),
z=as.single(unlist(BC_small$Posterior_samples$Lambda)),
b=as.single(rep(0,200*200)),s=as.single(rep(0,200*200*3)))
str(x8)
str(x9)
rm(x8)
x18 <- .Fortran("bigtdsub",n=as.integer(290),
m=as.integer(10),o=as.integer(10000),
x=as.single(BC_fit$Posterior_samples$Phi),
z=as.single(unlist(BC_fit$Posterior_samples$Lambda)),
b=as.single(rep(0,290*290)),s=as.single(rep(0,290*290*3)))
str(x18)
save(list(x18),file="bigx18.rds")
save(list("x18"),file="bigx18.rds")
save(x18,file="bigx18.rds")
rm(x18)
q()
source("newSpace2.R")
source("newSpace2.R")
x8 <- newSpace2(BC_small$Posterior_samples)
source("newSpace2.R")
x8 <- newSpace2(BC_small$Posterior_samples)
q()
library(SpaceX)
library(newSpace2)
devtools::install_github("ErinH1/newSpace2")
remove.packages("SpaceX")
devtools::install_github("SatwikAch/SpaceX")
q()
remove.packages("SpaceX")
devtools::install_github("SatwikAch/SpaceX")
devtools::install_github("ErinH1/newSpace2")
system.time(source("timing1.R"))
library(SpaceX)
library(newSpace2)
system.time(source("timing1.R"))
rm(BC_fit)
rm(BC_final)
q()
remotes::install_github("rdevito/MSFA")
devtools::install_github("ErinH1/SpaceX")
# Reading the Breast cancer data
# Spatial locations
head(BC_loc)
# Gene expression for data
head(BC_count)
# Data processing
G <-dim(BC_count)[2] # number of genes
N <-dim(BC_count)[1] # number of locations
library(SpaceX)
# Reading the Breast cancer data
# Spatial locations
head(BC_loc)
# Gene expression for data
head(BC_count)
# Data processing
G <-dim(BC_count)[2] # number of genes
N <-dim(BC_count)[1] # number of locations
is.loaded("bigtdsub")
date();BC_fit <- SpaceX(BC_count,BC_loc[,1:2],BC_loc[,3],sPMM=FALSE,Post_process = TRUE);date()
q()
getwd()
library(shiny)
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
q()
library(shiny)
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
q()
library(shiny)
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shape1.R")
install.packages("shinyWidgets",depen=TRUE)
runApp("shape1.R")
runApp("shape1.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("evenmore.R")
runApp("evenmore.R")
runApp("evenmore.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")`
runApp("shapetest.R")`
runApp("shapetest.R")`
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
runApp("shapetest.R")
?ggtitle
?ggtitle
runApp("shapetest.R")
runApp("shapetest.R")
q()
getwd()
setwd("c:/Users/Owner/myHTML")
setwd("c:/Users/Owner/Documents/myHTML")
tf <- tempfile(fileext = c(".Rmd", ".html"))
writeLines(
c("```{r klippy, echo=FALSE, include=TRUE}",
"klippy::klippy()",
"```",
"Insert this chunk in your `Rmd` file:",
"````markdown",
"`r ''````{r klippy, echo=FALSE, include=TRUE}",
"klippy::klippy()",
"```",
"````"
),
tf[1]
)
if (FALSE) {
rmarkdown::render(tf[1], "html_document", tf[2])
browseURL(paste0("file://", tf[2]))}
install.packages("bookdown",depen=TRUE)
